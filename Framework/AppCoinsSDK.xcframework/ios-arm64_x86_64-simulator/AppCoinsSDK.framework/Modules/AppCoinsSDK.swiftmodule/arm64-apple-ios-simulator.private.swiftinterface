// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AppCoinsSDK
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum AppCoinsSDKError : Swift.Error, Swift.CustomStringConvertible {
  case networkError(debugInfo: AppCoinsSDK.DebugInfo)
  case systemError(debugInfo: AppCoinsSDK.DebugInfo)
  case notEntitled(debugInfo: AppCoinsSDK.DebugInfo)
  case productUnavailable(debugInfo: AppCoinsSDK.DebugInfo)
  case purchaseNotAllowed(debugInfo: AppCoinsSDK.DebugInfo)
  case unknown(debugInfo: AppCoinsSDK.DebugInfo)
  public static func networkError(message: Swift.String, description: Swift.String, request: AppCoinsSDK.DebugRequestInfo? = nil) -> AppCoinsSDK.AppCoinsSDKError
  public static func systemError(message: Swift.String, description: Swift.String, request: AppCoinsSDK.DebugRequestInfo? = nil) -> AppCoinsSDK.AppCoinsSDKError
  public static func notEntitled(message: Swift.String, description: Swift.String, request: AppCoinsSDK.DebugRequestInfo? = nil) -> AppCoinsSDK.AppCoinsSDKError
  public static func productUnavailable(message: Swift.String, description: Swift.String, request: AppCoinsSDK.DebugRequestInfo? = nil) -> AppCoinsSDK.AppCoinsSDKError
  public static func purchaseNotAllowed(message: Swift.String, description: Swift.String, request: AppCoinsSDK.DebugRequestInfo? = nil) -> AppCoinsSDK.AppCoinsSDKError
  public static func unknown(message: Swift.String, description: Swift.String, request: AppCoinsSDK.DebugRequestInfo? = nil) -> AppCoinsSDK.AppCoinsSDKError
  public var description: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class DebugInfo {
  final public let message: Swift.String
  final public let description: Swift.String
  final public let request: AppCoinsSDK.DebugRequestInfo?
  @objc deinit
}
@_hasMissingDesignatedInitializers public class DebugRequestInfo {
  final public let url: Swift.String
  final public let method: AppCoinsSDK.RequestMethod
  final public let body: Swift.String
  final public let responseData: Swift.String
  final public let statusCode: Swift.Int
  @objc deinit
}
public struct AppcSDK {
  public static var configuration: AppCoinsSDK.AppcSDK.Configuration
  public struct Configuration {
  }
  public static func configure(locale: AppCoinsSDK.AppcStorefront.Locale? = nil, marketplace: AppCoinsSDK.AppcStorefront.Marketplace? = nil)
  #if compiler(>=5.3) && $AsyncAwait
  public static func isAvailable() async -> Swift.Bool
  #endif
  public static func handle(redirectURL: Foundation.URL?) -> Swift.Bool
}
extension Foundation.Bundle {
  public var isAppCoinsDevToolsEnabled: Swift.Bool {
    get
  }
}
public struct AppcStorefront {
  public let locale: AppCoinsSDK.AppcStorefront.Locale?
  public let marketplace: AppCoinsSDK.AppcStorefront.Marketplace?
  public struct Locale : Swift.Equatable {
    public let code: Swift.String
    public let region: Swift.String
    public static func fromRaw(raw: Swift.String) -> AppCoinsSDK.AppcStorefront.Locale?
    public static func == (lhs: AppCoinsSDK.AppcStorefront.Locale, rhs: AppCoinsSDK.AppcStorefront.Locale) -> Swift.Bool
  }
  public enum Marketplace : Swift.String {
    case aptoide
    case apple
    public static func fromRaw(raw: Swift.String) -> AppCoinsSDK.AppcStorefront.Marketplace?
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
}
extension AppCoinsSDK.AppcStorefront.Locale {
  public static let AFG: AppCoinsSDK.AppcStorefront.Locale
  public static let ALB: AppCoinsSDK.AppcStorefront.Locale
  public static let DZA: AppCoinsSDK.AppcStorefront.Locale
  public static let AGO: AppCoinsSDK.AppcStorefront.Locale
  public static let AIA: AppCoinsSDK.AppcStorefront.Locale
  public static let ATG: AppCoinsSDK.AppcStorefront.Locale
  public static let ARG: AppCoinsSDK.AppcStorefront.Locale
  public static let ARM: AppCoinsSDK.AppcStorefront.Locale
  public static let AUS: AppCoinsSDK.AppcStorefront.Locale
  public static let AUT: AppCoinsSDK.AppcStorefront.Locale
  public static let AZE: AppCoinsSDK.AppcStorefront.Locale
  public static let BHS: AppCoinsSDK.AppcStorefront.Locale
  public static let BHR: AppCoinsSDK.AppcStorefront.Locale
  public static let BRB: AppCoinsSDK.AppcStorefront.Locale
  public static let BLR: AppCoinsSDK.AppcStorefront.Locale
  public static let BEL: AppCoinsSDK.AppcStorefront.Locale
  public static let BLZ: AppCoinsSDK.AppcStorefront.Locale
  public static let BEN: AppCoinsSDK.AppcStorefront.Locale
  public static let BMU: AppCoinsSDK.AppcStorefront.Locale
  public static let BTN: AppCoinsSDK.AppcStorefront.Locale
  public static let BOL: AppCoinsSDK.AppcStorefront.Locale
  public static let BIH: AppCoinsSDK.AppcStorefront.Locale
  public static let BWA: AppCoinsSDK.AppcStorefront.Locale
  public static let BRA: AppCoinsSDK.AppcStorefront.Locale
  public static let VGB: AppCoinsSDK.AppcStorefront.Locale
  public static let BRN: AppCoinsSDK.AppcStorefront.Locale
  public static let BGR: AppCoinsSDK.AppcStorefront.Locale
  public static let BFA: AppCoinsSDK.AppcStorefront.Locale
  public static let KHM: AppCoinsSDK.AppcStorefront.Locale
  public static let CMR: AppCoinsSDK.AppcStorefront.Locale
  public static let CAN: AppCoinsSDK.AppcStorefront.Locale
  public static let CPV: AppCoinsSDK.AppcStorefront.Locale
  public static let CYM: AppCoinsSDK.AppcStorefront.Locale
  public static let TCD: AppCoinsSDK.AppcStorefront.Locale
  public static let CHL: AppCoinsSDK.AppcStorefront.Locale
  public static let CHN: AppCoinsSDK.AppcStorefront.Locale
  public static let COL: AppCoinsSDK.AppcStorefront.Locale
  public static let COD: AppCoinsSDK.AppcStorefront.Locale
  public static let COG: AppCoinsSDK.AppcStorefront.Locale
  public static let CRI: AppCoinsSDK.AppcStorefront.Locale
  public static let CIV: AppCoinsSDK.AppcStorefront.Locale
  public static let HRV: AppCoinsSDK.AppcStorefront.Locale
  public static let CYP: AppCoinsSDK.AppcStorefront.Locale
  public static let CZE: AppCoinsSDK.AppcStorefront.Locale
  public static let DNK: AppCoinsSDK.AppcStorefront.Locale
  public static let DMA: AppCoinsSDK.AppcStorefront.Locale
  public static let DOM: AppCoinsSDK.AppcStorefront.Locale
  public static let ECU: AppCoinsSDK.AppcStorefront.Locale
  public static let EGY: AppCoinsSDK.AppcStorefront.Locale
  public static let SLV: AppCoinsSDK.AppcStorefront.Locale
  public static let EST: AppCoinsSDK.AppcStorefront.Locale
  public static let SWZ: AppCoinsSDK.AppcStorefront.Locale
  public static let FJI: AppCoinsSDK.AppcStorefront.Locale
  public static let FIN: AppCoinsSDK.AppcStorefront.Locale
  public static let FRA: AppCoinsSDK.AppcStorefront.Locale
  public static let GAB: AppCoinsSDK.AppcStorefront.Locale
  public static let GMB: AppCoinsSDK.AppcStorefront.Locale
  public static let GEO: AppCoinsSDK.AppcStorefront.Locale
  public static let DEU: AppCoinsSDK.AppcStorefront.Locale
  public static let GHA: AppCoinsSDK.AppcStorefront.Locale
  public static let GRC: AppCoinsSDK.AppcStorefront.Locale
  public static let GRD: AppCoinsSDK.AppcStorefront.Locale
  public static let GTM: AppCoinsSDK.AppcStorefront.Locale
  public static let GNB: AppCoinsSDK.AppcStorefront.Locale
  public static let GUY: AppCoinsSDK.AppcStorefront.Locale
  public static let HND: AppCoinsSDK.AppcStorefront.Locale
  public static let HKG: AppCoinsSDK.AppcStorefront.Locale
  public static let HUN: AppCoinsSDK.AppcStorefront.Locale
  public static let ISL: AppCoinsSDK.AppcStorefront.Locale
  public static let IND: AppCoinsSDK.AppcStorefront.Locale
  public static let IDN: AppCoinsSDK.AppcStorefront.Locale
  public static let IRQ: AppCoinsSDK.AppcStorefront.Locale
  public static let IRL: AppCoinsSDK.AppcStorefront.Locale
  public static let ISR: AppCoinsSDK.AppcStorefront.Locale
  public static let ITA: AppCoinsSDK.AppcStorefront.Locale
  public static let JAM: AppCoinsSDK.AppcStorefront.Locale
  public static let JPN: AppCoinsSDK.AppcStorefront.Locale
  public static let JOR: AppCoinsSDK.AppcStorefront.Locale
  public static let KAZ: AppCoinsSDK.AppcStorefront.Locale
  public static let KEN: AppCoinsSDK.AppcStorefront.Locale
  public static let XKS: AppCoinsSDK.AppcStorefront.Locale
  public static let KWT: AppCoinsSDK.AppcStorefront.Locale
  public static let KGZ: AppCoinsSDK.AppcStorefront.Locale
  public static let LAO: AppCoinsSDK.AppcStorefront.Locale
  public static let LVA: AppCoinsSDK.AppcStorefront.Locale
  public static let LBN: AppCoinsSDK.AppcStorefront.Locale
  public static let LBR: AppCoinsSDK.AppcStorefront.Locale
  public static let LBY: AppCoinsSDK.AppcStorefront.Locale
  public static let LTU: AppCoinsSDK.AppcStorefront.Locale
  public static let LUX: AppCoinsSDK.AppcStorefront.Locale
  public static let MAC: AppCoinsSDK.AppcStorefront.Locale
  public static let MDG: AppCoinsSDK.AppcStorefront.Locale
  public static let MWI: AppCoinsSDK.AppcStorefront.Locale
  public static let MYS: AppCoinsSDK.AppcStorefront.Locale
  public static let MDV: AppCoinsSDK.AppcStorefront.Locale
  public static let MLI: AppCoinsSDK.AppcStorefront.Locale
  public static let MLT: AppCoinsSDK.AppcStorefront.Locale
  public static let MRT: AppCoinsSDK.AppcStorefront.Locale
  public static let MUS: AppCoinsSDK.AppcStorefront.Locale
  public static let MEX: AppCoinsSDK.AppcStorefront.Locale
  public static let FSM: AppCoinsSDK.AppcStorefront.Locale
  public static let MDA: AppCoinsSDK.AppcStorefront.Locale
  public static let MNG: AppCoinsSDK.AppcStorefront.Locale
  public static let MNE: AppCoinsSDK.AppcStorefront.Locale
  public static let MSR: AppCoinsSDK.AppcStorefront.Locale
  public static let MAR: AppCoinsSDK.AppcStorefront.Locale
  public static let MOZ: AppCoinsSDK.AppcStorefront.Locale
  public static let MMR: AppCoinsSDK.AppcStorefront.Locale
  public static let NAM: AppCoinsSDK.AppcStorefront.Locale
  public static let NRU: AppCoinsSDK.AppcStorefront.Locale
  public static let NPL: AppCoinsSDK.AppcStorefront.Locale
  public static let NLD: AppCoinsSDK.AppcStorefront.Locale
  public static let NZL: AppCoinsSDK.AppcStorefront.Locale
  public static let NIC: AppCoinsSDK.AppcStorefront.Locale
  public static let NER: AppCoinsSDK.AppcStorefront.Locale
  public static let NGA: AppCoinsSDK.AppcStorefront.Locale
  public static let MKD: AppCoinsSDK.AppcStorefront.Locale
  public static let NOR: AppCoinsSDK.AppcStorefront.Locale
  public static let OMN: AppCoinsSDK.AppcStorefront.Locale
  public static let PAK: AppCoinsSDK.AppcStorefront.Locale
  public static let PLW: AppCoinsSDK.AppcStorefront.Locale
  public static let PAN: AppCoinsSDK.AppcStorefront.Locale
  public static let PNG: AppCoinsSDK.AppcStorefront.Locale
  public static let PRY: AppCoinsSDK.AppcStorefront.Locale
  public static let PER: AppCoinsSDK.AppcStorefront.Locale
  public static let PHL: AppCoinsSDK.AppcStorefront.Locale
  public static let POL: AppCoinsSDK.AppcStorefront.Locale
  public static let PRT: AppCoinsSDK.AppcStorefront.Locale
  public static let QAT: AppCoinsSDK.AppcStorefront.Locale
  public static let KOR: AppCoinsSDK.AppcStorefront.Locale
  public static let ROU: AppCoinsSDK.AppcStorefront.Locale
  public static let RUS: AppCoinsSDK.AppcStorefront.Locale
  public static let RWA: AppCoinsSDK.AppcStorefront.Locale
  public static let STP: AppCoinsSDK.AppcStorefront.Locale
  public static let SAU: AppCoinsSDK.AppcStorefront.Locale
  public static let SEN: AppCoinsSDK.AppcStorefront.Locale
  public static let SRB: AppCoinsSDK.AppcStorefront.Locale
  public static let SYC: AppCoinsSDK.AppcStorefront.Locale
  public static let SLE: AppCoinsSDK.AppcStorefront.Locale
  public static let SGP: AppCoinsSDK.AppcStorefront.Locale
  public static let SVK: AppCoinsSDK.AppcStorefront.Locale
  public static let SVN: AppCoinsSDK.AppcStorefront.Locale
  public static let SLB: AppCoinsSDK.AppcStorefront.Locale
  public static let ZAF: AppCoinsSDK.AppcStorefront.Locale
  public static let ESP: AppCoinsSDK.AppcStorefront.Locale
  public static let LKA: AppCoinsSDK.AppcStorefront.Locale
  public static let KNA: AppCoinsSDK.AppcStorefront.Locale
  public static let LCA: AppCoinsSDK.AppcStorefront.Locale
  public static let VCT: AppCoinsSDK.AppcStorefront.Locale
  public static let SUR: AppCoinsSDK.AppcStorefront.Locale
  public static let SWE: AppCoinsSDK.AppcStorefront.Locale
  public static let CHE: AppCoinsSDK.AppcStorefront.Locale
  public static let TWN: AppCoinsSDK.AppcStorefront.Locale
  public static let TJK: AppCoinsSDK.AppcStorefront.Locale
  public static let TZA: AppCoinsSDK.AppcStorefront.Locale
  public static let THA: AppCoinsSDK.AppcStorefront.Locale
  public static let TON: AppCoinsSDK.AppcStorefront.Locale
  public static let TTO: AppCoinsSDK.AppcStorefront.Locale
  public static let TUN: AppCoinsSDK.AppcStorefront.Locale
  public static let TUR: AppCoinsSDK.AppcStorefront.Locale
  public static let TKM: AppCoinsSDK.AppcStorefront.Locale
  public static let TCA: AppCoinsSDK.AppcStorefront.Locale
  public static let UGA: AppCoinsSDK.AppcStorefront.Locale
  public static let UKR: AppCoinsSDK.AppcStorefront.Locale
  public static let ARE: AppCoinsSDK.AppcStorefront.Locale
  public static let GBR: AppCoinsSDK.AppcStorefront.Locale
  public static let USA: AppCoinsSDK.AppcStorefront.Locale
  public static let URY: AppCoinsSDK.AppcStorefront.Locale
  public static let UZB: AppCoinsSDK.AppcStorefront.Locale
  public static let VUT: AppCoinsSDK.AppcStorefront.Locale
  public static let VEN: AppCoinsSDK.AppcStorefront.Locale
  public static let VNM: AppCoinsSDK.AppcStorefront.Locale
  public static let YEM: AppCoinsSDK.AppcStorefront.Locale
  public static let ZMB: AppCoinsSDK.AppcStorefront.Locale
  public static let ZWE: AppCoinsSDK.AppcStorefront.Locale
  public static let all: [AppCoinsSDK.AppcStorefront.Locale]
  public static let EU: [AppCoinsSDK.AppcStorefront.Locale]
}
public struct Product : Swift.Codable {
  public let sku: Swift.String
  public let title: Swift.String
  public let description: Swift.String?
  public let priceCurrency: Swift.String
  public let priceValue: Swift.String
  public let priceLabel: Swift.String
  public let priceSymbol: Swift.String
  public let priceDiscountOriginal: Swift.String?
  public let priceDiscountPercentage: Swift.String?
  #if compiler(>=5.3) && $AsyncAwait
  public static func products(domain: Swift.String = (Bundle.main.bundleIdentifier ?? ""), for identifiers: [Swift.String]? = nil) async throws -> [AppCoinsSDK.Product]
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func purchase(domain: Swift.String = (Bundle.main.bundleIdentifier ?? ""), payload: Swift.String? = nil, orderID: Swift.String = String(Date.timeIntervalSinceReferenceDate)) async -> AppCoinsSDK.PurchaseResult
  #endif
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers public class Purchase : Swift.Codable {
  final public let uid: Swift.String
  final public let sku: Swift.String
  public var state: Swift.String
  final public let orderUid: Swift.String
  final public let payload: Swift.String?
  final public let created: Swift.String
  final public let verification: AppCoinsSDK.Purchase.PurchaseVerification
  @_hasMissingDesignatedInitializers public class PurchaseVerification : Swift.Codable {
    final public let type: Swift.String
    final public let data: AppCoinsSDK.Purchase.PurchaseVerificationData
    final public let signature: Swift.String
    @objc deinit
    public func encode(to encoder: any Swift.Encoder) throws
    required public init(from decoder: any Swift.Decoder) throws
  }
  @_hasMissingDesignatedInitializers public class PurchaseVerificationData : Swift.Codable {
    final public let orderId: Swift.String
    final public let packageName: Swift.String
    final public let productId: Swift.String
    final public let purchaseTime: Swift.Int
    final public let purchaseToken: Swift.String
    final public let purchaseState: Swift.Int
    final public let developerPayload: Swift.String
    @objc deinit
    public func encode(to encoder: any Swift.Encoder) throws
    required public init(from decoder: any Swift.Decoder) throws
  }
  #if compiler(>=5.3) && $AsyncAwait
  public static func provider(domain: Swift.String = (Bundle.main.bundleIdentifier ?? ""), for product: AppCoinsSDK.Product) async -> AppCoinsSDK.PurchaseProvider?
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func finish(domain: Swift.String = (Bundle.main.bundleIdentifier ?? "")) async throws
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public static func all(domain: Swift.String = (Bundle.main.bundleIdentifier ?? "")) async throws -> [AppCoinsSDK.Purchase]
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public static func latest(domain: Swift.String = (Bundle.main.bundleIdentifier ?? ""), sku: Swift.String) async throws -> AppCoinsSDK.Purchase?
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public static func unfinished(domain: Swift.String = (Bundle.main.bundleIdentifier ?? "")) async throws -> [AppCoinsSDK.Purchase]
  #endif
  public static var updates: _Concurrency.AsyncStream<AppCoinsSDK.PurchaseIntent> {
    get
  }
  public static var intent: AppCoinsSDK.PurchaseIntent? {
    get
  }
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
public struct PurchaseIntent : Swift.Sendable, Swift.Identifiable, Swift.Codable {
  public let id: Foundation.UUID
  public let product: AppCoinsSDK.Product
  public let timestamp: Foundation.Date
  #if compiler(>=5.3) && $AsyncAwait
  public func confirm(domain: Swift.String = (Bundle.main.bundleIdentifier ?? ""), payload: Swift.String? = nil, orderID: Swift.String = String(Date.timeIntervalSinceReferenceDate)) async -> AppCoinsSDK.PurchaseResult
  #endif
  public func reject()
  public typealias ID = Foundation.UUID
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public enum PurchaseProvider {
  case aptoide
  case apple
  public static func == (a: AppCoinsSDK.PurchaseProvider, b: AppCoinsSDK.PurchaseProvider) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum PurchaseResult {
  case success(verificationResult: AppCoinsSDK.VerificationResult)
  case pending
  case userCancelled
  case failed(error: AppCoinsSDK.AppCoinsSDKError)
}
public enum VerificationResult {
  case verified(purchase: AppCoinsSDK.Purchase)
  case unverified(purchase: AppCoinsSDK.Purchase, verificationError: AppCoinsSDK.AppCoinsSDKError)
}
public enum PurchaseType {
  case direct
  case indirect
  public static func == (a: AppCoinsSDK.PurchaseType, b: AppCoinsSDK.PurchaseType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum RequestMethod : Swift.String {
  case GET
  case POST
  case UNKNOWN
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension AppCoinsSDK.AppcStorefront.Marketplace : Swift.Equatable {}
extension AppCoinsSDK.AppcStorefront.Marketplace : Swift.Hashable {}
extension AppCoinsSDK.AppcStorefront.Marketplace : Swift.RawRepresentable {}
extension AppCoinsSDK.PurchaseProvider : Swift.Equatable {}
extension AppCoinsSDK.PurchaseProvider : Swift.Hashable {}
extension AppCoinsSDK.PurchaseType : Swift.Equatable {}
extension AppCoinsSDK.PurchaseType : Swift.Hashable {}
extension AppCoinsSDK.RequestMethod : Swift.Equatable {}
extension AppCoinsSDK.RequestMethod : Swift.Hashable {}
extension AppCoinsSDK.RequestMethod : Swift.RawRepresentable {}
